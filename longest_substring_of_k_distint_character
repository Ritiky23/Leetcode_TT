class Solution {
    public int longestkSubstr(String s, int k) {
        
        HashMap<Character,Integer> map = new HashMap<>();
        
        int i = -1;
        int j = -1;
        
        int maxlen = -1;
        
        while(true){
            boolean f1 = false;
            boolean f2 = false;
            while(i<s.length()-1 && map.size()<=k){
                f1 = true;
                
                i++;
                char cha = s.charAt(i);
                map.put(cha,map.getOrDefault(cha,0)+1);
                 if(map.size()==k) {
                    int len = (i-j);
                    maxlen = Math.max(maxlen,len);
                }
                
            }
            
            while(j<i && map.size()>k){
                f2 = true;
                j++;
                char chr = s.charAt(j);
                if(map.getOrDefault(chr,0)==1){
                    map.remove(chr);
                }
                else{
                    map.put(chr,map.getOrDefault(chr,0)-1);
                }
            }
            
            if(f1==false && f2==false){
                break;
            }
        }
        
        
        return maxlen;